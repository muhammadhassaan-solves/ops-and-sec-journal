1. Install Kubectl 
https://kubernetes.io/docs/tasks/tools/install-kubectl-linux/
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2. Install AWS cli
https://docs.aws.amazon.com/cli/latest/userguide/getting-started-install.html
aws configure
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3. Install EKS 
https://docs.aws.amazon.com/eks/latest/eksctl/installation.html
eksctl version
eksctl create cluster --name clustername --region regionname --nodegroup-name ng-core --node-type m5.large --nodes 1 --nodes-min 1 --nodes-max 2 --managed
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4. Configure IAM OIDC provider
export cluster_name=<CLUSTER-NAME>
oidc_id=$(aws eks describe-cluster --name $cluster_name --query "cluster.identity.oidc.issuer" --output text | cut -d '/' -f 5) 
aws iam list-open-id-connect-providers | grep $oidc_id | cut -d "/" -f4
eksctl utils associate-iam-oidc-provider --cluster $cluster_name --approve
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
5. Setup AWS Load Balancer Controller (AWS ALB)
- Download IAM Policy
curl -O https://raw.githubusercontent.com/kubernetes-sigs/aws-load-balancer-controller/v2.11.0/docs/install/iam_policy.json

- Create IAM Policy
aws iam create-policy --policy-name AWSLoadBalancerControllerIAMPolicy --policy-document file://iam_policy.json

- Create IAM Role: 
eksctl create iamserviceaccount \
  --cluster=<your-cluster-name> \
  --namespace=kube-system \
  --name=aws-load-balancer-controller \
  --role-name AmazonEKSLoadBalancerControllerRole \
  --attach-policy-arn=arn:aws:iam::<aws-account-id>:policy/AWSLoadBalancerControllerIAMPolicy \
  --approve

- Add Helm Repo
helm repo add eks https://aws.github.io/eks-charts

- Update the repo
helm repo update eks

- Install ALB Controller
helm install aws-load-balancer-controller eks/aws-load-balancer-controller \            
  -n kube-system \
  --set clusterName=<your-cluster-name> \
  --set serviceAccount.create=false \
  --set serviceAccount.name=aws-load-balancer-controller \
  --set region=<region> \
  --set vpcId=<your-vpc-id>
kubectl get deployment -n kube-system aws-load-balancer-controller
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
6. EBS CSI Plugin configuration (if you need access to EBS)

- eksctl create iamserviceaccount \
    --name ebs-csi-controller-sa \
    --namespace kube-system \
    --cluster <YOUR-CLUSTER-NAME> \
    --role-name AmazonEKS_EBS_CSI_DriverRole \
    --role-only \
    --attach-policy-arn arn:aws:iam::aws:policy/service-role/AmazonEBSCSIDriverPolicy \
    --approve

- eksctl create addon --name aws-ebs-csi-driver --cluster <YOUR-CLUSTER-NAME> --service-account-role-arn arn:aws:iam::<AWS-ACCOUNT-ID>:role/AmazonEKS_EBS_CSI_DriverRole --force

apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: ebs-gp3
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: ebs.csi.aws.com
parameters:
  type: gp3
  fsType: ext4
allowVolumeExpansion: true
volumeBindingMode: WaitForFirstConsumer
reclaimPolicy: Delete
----------------------------------------------------------------------------------------------------------------------------------------------------------------------
Special Thanks: https://github.com/iam-veeramalla/three-tier-architecture-demo/tree/master/EKS
